/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include "swedish-keymap.h"

&left_encoder { resolution = <2>; };
&right_encoder { resolution = <2>; };

// None/Trans
#define _____ &none
#define t____ &trans

// Layers
#define DEFAULT 0
#define SYM 1
#define FN 2
#define CMD 3

/ {
	keymap {
		compatible = "zmk,keymap";

		default_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// |  ESC  |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   |   Å  |
// |  TAB  |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   Ö  |   Ä  |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   | L SHIFT | L SHIFT |  | L SHIFT | L SHIFT |  N   |  M    |  ,    |  .   |   /   | CTRL |
//                     | GUI  | DEL  | RET  |  SPACE  |   ESC   |  |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |
			bindings = <
&lt CMD ESC &kp Q		&kp W		&kp E		&kp R		&kp TAB																&kp Y		&kp U		&kp I		&kp O		&kp P		&kp C_MUTE
&kp TAB		&kp A		&kp S		&kp D		&kp F		&kp G																&kp H		&kp J		&kp K		&kp L		&kp SE_OE	&kp SE_AE
&kp LCTRL	&kp Z		&kp X		&kp C		&kp V		&kp B		_____		&kp LSHFT           _____		_____		&kp N		&kp M		&kp COMMA	&kp DOT		&kp SE_MINS &kp RCTRL
									&mo SYM		&kp LALT	&kp RET		&kp SPACE	&kp BSPC			&kp RET		&kp SPACE	&kp DEL		&kp BSPC	&kp RALT
			>;

			sensor-bindings = <
				&inc_dec_kp PG_UP PG_DN
				&inc_dec_kp C_VOL_DN C_VOL_UP 
			>;
		};

		
		sym_layer {
			bindings = <
&kp N1  	&kp N2  	&kp N3  	&kp N4  	&kp N5  	&kp N6																&kp N7  	&kp N8  	&kp N9  	&kp N0  	&kp SE_PLUS t____
t____		t____		t____		t____		t____		t____																t____		t____		&kp UP		t____		t____		t____
t____		t____		t____		t____		t____		t____		t____		t____				t____		t____		t____		&kp LEFT	&kp DOWN	&kp RIGHT	t____		t____
									t____		t____		t____		t____		t____				t____		t____		t____		t____		t____
				>;
			sensor-bindings = <
				&inc_dec_kp t____ t____
				&inc_dec_kp LG(LEFT) LG(RIGHT) 
			>;
		};

		fn_layer {
			bindings = <
&kp F1  	&kp F2  	&kp F3  	&kp F4  	&kp F5  	&kp F6																&kp F7  	&kp F8  	&kp F9  	&kp F10  	&kp F11 	&kp F12
t____		t____		t____		t____		t____		t____																t____		t____		t____		t____		t____		t____
t____		t____		t____		t____		t____		t____		t____		t____				t____		t____		t____		t____		t____		t____		t____		t____
									t____		t____		t____		t____		t____				t____		t____		t____		t____		t____
				>;
			sensor-bindings = <
				&inc_dec_kp t____ t____
				&inc_dec_kp LG(LEFT) LG(RIGHT) 
			>;
		};

		cmd_layer {
			bindings = <
t____	  	&bt BT_SEL 0&bt BT_SEL 1&bt BT_SEL 2&bt BT_SEL 3&bt BT_SEL 4														&kp N7  	&kp N8  	&kp N9  	&kp N0  	&kp SE_PLUS t____
&bt BT_CLR	t____		t____		t____		t____		t____																t____		t____		t____		t____		t____		t____
&out OUT_TOG t____		t____		t____		t____		t____		t____		t____				t____		t____		t____		t____		t____		t____		t____		t____
									t____		t____		t____		t____		t____				t____		t____		t____		t____		t____
			>;
			sensor-bindings = <
				&inc_dec_kp t____ t____
				&inc_dec_kp LG(LEFT) LG(RIGHT) 
			>;
		};

		empty_layer {
			bindings = <
t____	  	t____		t____		t____		t____		t____																t____		t____		t____		t____		t____		t____
t____		t____		t____		t____		t____		t____																t____		t____		t____		t____		t____		t____
t____		t____		t____		t____		t____		t____		t____		t____				t____		t____		t____		t____		t____		t____		t____		t____
									t____		t____		t____		t____		t____				t____		t____		t____		t____		t____
			>;
			sensor-bindings = <
				&inc_dec_kp t____ t____
				&inc_dec_kp t____ t____
			>;
		};

	};
};

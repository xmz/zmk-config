/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include "swedish-keymap.h"

&left_encoder { resolution = <2>; };
&right_encoder { resolution = <2>; };

// None/Trans
#define _____ &none
#define t____ &trans

// Layers
#define DEFAULT 0
#define SYM 1
#define CMD 2

/ {
	keymap {
		compatible = "zmk,keymap";

		default_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// |  ESC  |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   |   Å  |
// |  TAB  |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   Ö  |   Ä  |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   | L SHIFT | L SHIFT |  | L SHIFT | L SHIFT |  N   |  M    |  ,    |  .   |   /   | CTRL |
//                     | GUI  | DEL  | RET  |  SPACE  |   ESC   |  |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |
			bindings = <
	&lt CMD ESC   &kp Q &kp W &kp E &kp R &kp T                                                &kp Y &kp U  &kp I     &kp O   &kp P    &kp SE_AO
	&kp TAB   &kp A &kp S &kp D &kp F &kp G                                                &kp H &kp J  &kp K     &kp L   &kp SE_OE &kp SE_AE
	&kp LCTRL &kp Z &kp X &kp C &kp V &kp B &kp LSHFT &kp LSHFT        &kp LSHFT &kp LSHFT &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RCTRL
	                 &mo SYM &kp DEL &kp RET &kp SPACE &kp BSPC        &kp RET  &kp SPACE  &kp TAB &kp BSPC &kp RALT
			>;

			sensor-bindings = <
				&inc_dec_kp PG_UP PG_DN
				&inc_dec_kp C_VOL_DN C_VOL_UP 
			>;
		};

		
		sym_layer {
			bindings = <
			&kp SE_LCBR &kp NUMBER_1 &kp SE_2 &kp SE_3 &kp SE_4 &kp SE_5                                   t____   t____   t____   t____   t____   t____
			t____   t____   t____   t____   t____   t____                                   t____   t____   t____   t____   t____   t____
			t____   t____   t____   t____   t____   t____   t____   t____   t____   t____   t____   t____   t____   t____   t____   t____
									t____   t____   t____   t____   t____   t____   t____   t____   t____   t____
			>;
			sensor-bindings = <
				&inc_dec_kp t____ t____
				&inc_dec_kp LG(LEFT) LG(RIGHT) 
			>;
		};

		cmd_layer {
			bindings = <
			t____   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                                   t____   t____   t____   t____   t____   t____
			&bt BT_CLR   t____   t____   t____   t____   t____                                   t____   t____   t____   t____   t____   t____
			&out OUT_TOG t____   t____   t____   t____   t____   t____   t____   t____   t____   t____   t____   t____   t____   t____   t____
									t____   t____   t____   t____   t____   t____   t____   t____   t____   t____
			>;
			sensor-bindings = <
				&inc_dec_kp t____ t____
				&inc_dec_kp LG(LEFT) LG(RIGHT) 
			>;
		};

		empty_layer {
			bindings = <
			t____   t____   t____   t____   t____   t____                                   t____   t____   t____   t____   t____   t____
			t____   t____   t____   t____   t____   t____                                   t____   t____   t____   t____   t____   t____
			t____   t____   t____   t____   t____   t____   t____   t____   t____   t____   t____   t____   t____   t____   t____   t____
									t____   t____   t____   t____   t____   t____   t____   t____   t____   t____
			>;
			sensor-bindings = <&inc_dec_kp LG(LEFT) LG(RIGHT) &inc_dec_kp t____ t____>;
		};

	};
};

# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy

variables:
  BOARD: "splitkb_aurora_lily58"

build-job:
  image:
#    name: "zmkfirmware/zmk-build-arm:3.2"
    name: "$CI_REGISTRY_IMAGE/zmk-build"
    pull_policy: if-not-present
  stage: build
  script:
    - echo "Compiling the code..."
    - cd /zmk/app
    - SHIELD=${BOARD}
    - if [ -f $CI_PROJECT_DIR/$BOARD/.build_vars ]; then source $CI_PROJECT_DIR/$BOARD/.build_vars; fi
    - west build -d .build/${BOARD}_right -b nice_nano_v2 -- -DSHIELD="${SHIELD}_right${SHIELDS}" -DZMK_CONFIG=$CI_PROJECT_DIR/$BOARD
    - cp .build/${BOARD}_right/zephyr/zmk.uf2 $CI_PROJECT_DIR/zmk_${BOARD}_right.uf2
    - west build -d .build/${BOARD}_left -b nice_nano_v2 -- -DSHIELD="${SHIELD}_left${SHIELDS}" -DZMK_CONFIG=$CI_PROJECT_DIR/$BOARD
    - cp .build/${BOARD}_left/zephyr/zmk.uf2 $CI_PROJECT_DIR/zmk_${BOARD}_left.uf2
    - echo "Compile complete."
  artifacts:
    untracked: true
    paths:
      - "*.uf2"
    when: on_success
    expire_in: 30 days

build_image:
  variables:
    ZMK_REPO: "https://github.com/petejohanson/zmk.git"
    ZMK_BRANCH: "stephen/split-encoder"
    ZMK_IMAGE_VERSION: "3.2"
  image: 
    name: docker:stable-git
    pull_policy: if-not-present
  stage: build
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - echo "Some variables= ${ZMK_REPO} ${ZMK_BRANCH} $ZMK_IMAGE_VERSION"
    - docker build --tag $CI_REGISTRY_IMAGE/zmk-build -f docker_build_image/Dockerfile --build-arg="ZMK_IMAGE_VERSION=${ZMK_IMAGE_VERSION}" --build-arg="ZMK_REPO=${ZMK_REPO}" --build-arg="ZMK_BRANCH=${ZMK_BRANCH}" .
    - docker push $CI_REGISTRY_IMAGE/zmk-build
  # only:
  #   - master
  when: manual

unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests... This will take about 60 seconds."
    - sleep 60
    - echo "Code coverage is 90%"

deploy-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  environment: production
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."


